==================
Test for the add integer function
==================

Add 2 positive integers
=======================

>>> add_integer = __import__('0-add_integer').add_integer
>>> print(add_integer(1, 2))
3

>>>
Add integers with first positive and the other negative
======================================================
>>> print(add_integer(100, -2))
98
>>>

Add integers given only the mandatory argument
==============================================
>>> print(add_integer(2))
100
>>>

Add float and neggative int values
==================================
>>> print(add_integer(100.3, -2))
98
>>>

Add  negative float to the default
==================================
>>> print(add_integer(-100.3))
-2
>>>
Add positve float to the default
========================
>>> print(add_integer(100.3))
198
>>>

Test for exception given  b as string value
===========================================
>>> try:
...     print(add_integer(4, "School"))
... except Exception as e:
...     print(e)
b must be an integer

Test for exception given a as None
==================================
>>> try:
...     print(add_integer(None))
... except Exception as e:
...     print(e)
a must be an integer

Test for no argumennt
=====================
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(777, float('NaN'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer


>>> add_integer(666, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(2000202, -float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
